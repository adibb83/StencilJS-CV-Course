/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface CvContainer {
    }
    interface CvForm {
    }
    interface CvInput {
        "disabled": boolean;
        "placeholder": string;
    }
    interface CvSelect {
        "defaltValue": string;
        "lable": string;
        "selectOptions": string[];
    }
    interface CvTextarea {
        "disabled": boolean;
        "placeholder": string;
        "rows": number;
    }
}
export interface CvInputCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLCvInputElement;
}
export interface CvSelectCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLCvSelectElement;
}
export interface CvTextareaCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLCvTextareaElement;
}
declare global {
    interface HTMLCvContainerElement extends Components.CvContainer, HTMLStencilElement {
    }
    var HTMLCvContainerElement: {
        prototype: HTMLCvContainerElement;
        new (): HTMLCvContainerElement;
    };
    interface HTMLCvFormElement extends Components.CvForm, HTMLStencilElement {
    }
    var HTMLCvFormElement: {
        prototype: HTMLCvFormElement;
        new (): HTMLCvFormElement;
    };
    interface HTMLCvInputElement extends Components.CvInput, HTMLStencilElement {
    }
    var HTMLCvInputElement: {
        prototype: HTMLCvInputElement;
        new (): HTMLCvInputElement;
    };
    interface HTMLCvSelectElement extends Components.CvSelect, HTMLStencilElement {
    }
    var HTMLCvSelectElement: {
        prototype: HTMLCvSelectElement;
        new (): HTMLCvSelectElement;
    };
    interface HTMLCvTextareaElement extends Components.CvTextarea, HTMLStencilElement {
    }
    var HTMLCvTextareaElement: {
        prototype: HTMLCvTextareaElement;
        new (): HTMLCvTextareaElement;
    };
    interface HTMLElementTagNameMap {
        "cv-container": HTMLCvContainerElement;
        "cv-form": HTMLCvFormElement;
        "cv-input": HTMLCvInputElement;
        "cv-select": HTMLCvSelectElement;
        "cv-textarea": HTMLCvTextareaElement;
    }
}
declare namespace LocalJSX {
    interface CvContainer {
    }
    interface CvForm {
    }
    interface CvInput {
        "disabled"?: boolean;
        "onCvInputChange"?: (event: CvInputCustomEvent<string>) => void;
        "placeholder"?: string;
    }
    interface CvSelect {
        "defaltValue"?: string;
        "lable"?: string;
        "onCvSelectChange"?: (event: CvSelectCustomEvent<string>) => void;
        "selectOptions"?: string[];
    }
    interface CvTextarea {
        "disabled"?: boolean;
        "onCvTextAreaChange"?: (event: CvTextareaCustomEvent<string>) => void;
        "placeholder"?: string;
        "rows"?: number;
    }
    interface IntrinsicElements {
        "cv-container": CvContainer;
        "cv-form": CvForm;
        "cv-input": CvInput;
        "cv-select": CvSelect;
        "cv-textarea": CvTextarea;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "cv-container": LocalJSX.CvContainer & JSXBase.HTMLAttributes<HTMLCvContainerElement>;
            "cv-form": LocalJSX.CvForm & JSXBase.HTMLAttributes<HTMLCvFormElement>;
            "cv-input": LocalJSX.CvInput & JSXBase.HTMLAttributes<HTMLCvInputElement>;
            "cv-select": LocalJSX.CvSelect & JSXBase.HTMLAttributes<HTMLCvSelectElement>;
            "cv-textarea": LocalJSX.CvTextarea & JSXBase.HTMLAttributes<HTMLCvTextareaElement>;
        }
    }
}
